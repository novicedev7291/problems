Doubly troubly linked list, each node is pointing to next node as any other list but also have one more pointer pointing to any other node in linked list (troubly pointer).


class DLLNode
{
  int data;
  DLLNode d;
  DLLNode t;
  DLLNode(int v) {data = v; d= null; t=null;}
}
class BeingZeroDLL
{
	DLLNode clone(DLLNode h)
	{
		if(h == null) return null;
		DLLNode temp = h;
		LinkedList<DLLNode> copyList = new LinkedList();

		Map<Integer, Queue<DLLNode>> pointerMap = new HashMap<>();  

		while(temp != null){
			if(pointerMap.containsKey(temp.data)){
				Queue<DLLNode> q = pointerMap.get(temp.data);
				q.add(temp.d);
				pointerMap.put(temp.data, q);
			}else{
				Queue<DLLNode> q = new LinkedList();
				q.add(temp.d);
				pointerMap.put(temp.data, q);
			}
		}

		temp = h;

		while(temp != null){
			DLLNode n = new DLLNode(temp.data);
			copyList.add(n);
			DLLNode current = temp;
			temp = temp.d;
			current.d = n;
			n.t = current;
		}

		for(DLLNode head: copyList){
			if(head.t.t != null){
				head.t = head.t.t.d;
			}
			else{
				head.t = null;
			}
		}

		temp = h;
		while(temp != null){
			Queue<DLLNode> q = pointerMap.get(temp.data);
			if(q != null && !q.isEmpty()){
				DLLNode next = q.remove();
				temp.d = next;
			}else{
				temp.d = null;
			}
			temp = temp.d;
		}

		return copyList.peek();
	}
}